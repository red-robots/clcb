// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

@mixin flexbox(){
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
  }
  @mixin flexbox-flex($first, $second, $third) {
	-webkit-box-flex: $first $second $third;
	-moz-box-flex: $first $second $third;
	-webkit-flex: $first $second $third;
	-ms-flex: $first $second $third;
	flex: $first $second $third;
  }
  @mixin flexbox-wrap($value){
	-webkit-flex-wrap: $value;
	flex-wrap: $value;
  }
  @mixin flexbox-align-content($value){
	-webkit-align-content: $value;
	align-content: $value;
  }
  @mixin flexbox-align-items($value){
	-webkit-align-items: $value;
	align-items: $value;
  }
  @mixin flexbox-justify($value){
	-webkit-justify-content: $value;
	justify-content: $value;
  }
  @mixin flexbox-align-self($value){
	-webkit-align-self: $value;
	align-self: $value;
  }
  @mixin flexbox-direction($value){
	-webkit-flex-direction: $value;
	flex-direction: $value;
  }
  @mixin translatexy($value1,$value2){
	-ms-transform: translateX($value1) translateY($value2);
	-moz-transform: translateX($value1) translateY($value2);
	-webkit-transform: translateX($value1) translateY($value2);
	transform: translateX($value1) translateY($value2);
  }

@mixin background-image-full($attachment:fixed,$position:top center) {
  background-size: cover;
  background-repeat:no-repeat;
  background-position:$position;
  background-attachment:$attachment;
}

@mixin vertical-center-text($width:100%,$height:100%) {
	width: $width;
    height: $height;
    margin: 0 auto;
    position: relative;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    z-index: 6;
}

@mixin bottom_red_line($width:75px,$height:4px) {
    content: "";
    display: none;
    width: $width;
    height: $height;
    background: $color-red;
    margin: 0 0;
    position: relative;
    top: 4px;
}
@mixin whitegrad() {
  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#ffffff+0,ffffff+99&0+0,0.65+100 */
  background: -moz-linear-gradient(top, rgba(255,255,255,0) 0%, rgba(255,255,255,0.64) 99%, rgba(255,255,255,0.65) 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(top, rgba(255,255,255,0) 0%,rgba(255,255,255,0.64) 99%,rgba(255,255,255,0.65) 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to bottom, rgba(255,255,255,0) 0%,rgba(255,255,255,0.64) 99%,rgba(255,255,255,0.65) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#a6ffffff',GradientType=0 ); /* IE6-9 */
}
@mixin blackgrad() {
  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#000000+0,000000+99&0+0,0.65+100 */
    background: -moz-linear-gradient(top, rgba(0,0,0,0) 0%, rgba(0,0,0,0.64) 99%, rgba(0,0,0,0.65) 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(top, rgba(0,0,0,0) 0%,rgba(0,0,0,0.64) 99%,rgba(0,0,0,0.65) 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(to bottom, rgba(0,0,0,0) 0%,rgba(0,0,0,0.64) 99%,rgba(0,0,0,0.65) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00000000', endColorstr='#a6000000',GradientType=0 ); /* IE6-9 */
}